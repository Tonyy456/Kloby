//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/Input/GameInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GameInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GameInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GameInput"",
    ""maps"": [
        {
            ""name"": ""FootballActions"",
            ""id"": ""cd718802-6148-4438-8a0e-6ee7617ba962"",
            ""actions"": [
                {
                    ""name"": ""Push"",
                    ""type"": ""Button"",
                    ""id"": ""506660d3-fdd9-4807-87f9-1f8bbaa81d53"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pull"",
                    ""type"": ""Button"",
                    ""id"": ""f283bcac-cf79-42cb-9e05-db894ae6a6ea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WASD"",
                    ""type"": ""Value"",
                    ""id"": ""7ed24a6a-c5aa-4b07-ad3e-a1581c5cc335"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""type"": ""Value"",
                    ""id"": ""085d62d2-ae98-4f6f-b94a-1d8b7b070912"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""3f559b29-ccb2-47e6-a528-6430cebeb702"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Push"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""20ae9d59-4338-489d-9b06-9ad80e24cfbc"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pull"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""f632f548-ce87-4551-970d-ca3684c4a9c8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""9aeb63cc-a845-4a85-951d-a1afbba88108"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7e8dad50-b479-435e-9cb3-993f1484cab2"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""31fd7dfa-85f2-4503-9019-592453c70ae7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""ec97faac-3b85-4ae4-90e3-7e4ce53bd323"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WASD"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""9beab17b-a5bd-4bec-aae5-52da7894bee8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Arrows"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ca0fc65c-34f9-422e-af97-1aaad0661585"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Arrows"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c56992cd-f34f-4789-8508-648086b36ace"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Arrows"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""45113695-bd0f-40a0-83f4-adb217ab39e1"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Arrows"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""be853588-ae28-4709-abb3-1176a204c906"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Arrows"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // FootballActions
        m_FootballActions = asset.FindActionMap("FootballActions", throwIfNotFound: true);
        m_FootballActions_Push = m_FootballActions.FindAction("Push", throwIfNotFound: true);
        m_FootballActions_Pull = m_FootballActions.FindAction("Pull", throwIfNotFound: true);
        m_FootballActions_WASD = m_FootballActions.FindAction("WASD", throwIfNotFound: true);
        m_FootballActions_Arrows = m_FootballActions.FindAction("Arrows", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FootballActions
    private readonly InputActionMap m_FootballActions;
    private IFootballActionsActions m_FootballActionsActionsCallbackInterface;
    private readonly InputAction m_FootballActions_Push;
    private readonly InputAction m_FootballActions_Pull;
    private readonly InputAction m_FootballActions_WASD;
    private readonly InputAction m_FootballActions_Arrows;
    public struct FootballActionsActions
    {
        private @GameInput m_Wrapper;
        public FootballActionsActions(@GameInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Push => m_Wrapper.m_FootballActions_Push;
        public InputAction @Pull => m_Wrapper.m_FootballActions_Pull;
        public InputAction @WASD => m_Wrapper.m_FootballActions_WASD;
        public InputAction @Arrows => m_Wrapper.m_FootballActions_Arrows;
        public InputActionMap Get() { return m_Wrapper.m_FootballActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FootballActionsActions set) { return set.Get(); }
        public void SetCallbacks(IFootballActionsActions instance)
        {
            if (m_Wrapper.m_FootballActionsActionsCallbackInterface != null)
            {
                @Push.started -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnPush;
                @Push.performed -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnPush;
                @Push.canceled -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnPush;
                @Pull.started -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnPull;
                @Pull.performed -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnPull;
                @Pull.canceled -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnPull;
                @WASD.started -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnWASD;
                @WASD.performed -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnWASD;
                @WASD.canceled -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnWASD;
                @Arrows.started -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnArrows;
                @Arrows.performed -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnArrows;
                @Arrows.canceled -= m_Wrapper.m_FootballActionsActionsCallbackInterface.OnArrows;
            }
            m_Wrapper.m_FootballActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Push.started += instance.OnPush;
                @Push.performed += instance.OnPush;
                @Push.canceled += instance.OnPush;
                @Pull.started += instance.OnPull;
                @Pull.performed += instance.OnPull;
                @Pull.canceled += instance.OnPull;
                @WASD.started += instance.OnWASD;
                @WASD.performed += instance.OnWASD;
                @WASD.canceled += instance.OnWASD;
                @Arrows.started += instance.OnArrows;
                @Arrows.performed += instance.OnArrows;
                @Arrows.canceled += instance.OnArrows;
            }
        }
    }
    public FootballActionsActions @FootballActions => new FootballActionsActions(this);
    public interface IFootballActionsActions
    {
        void OnPush(InputAction.CallbackContext context);
        void OnPull(InputAction.CallbackContext context);
        void OnWASD(InputAction.CallbackContext context);
        void OnArrows(InputAction.CallbackContext context);
    }
}
